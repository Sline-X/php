-Для чего используют Redis? Какие области применения?
Чаще всего используют как кеширующий сервер, чтобы избегать частого обращению к субд на диске(открыть коннект, извлечь данные с диска, обработать, возможно отрендерить html и вернуть клиенту), таким образом если данные не меняются часто, мы можем хранить в редисе весь трендеренный html страницы и возвращать страницу из него


-Какую функцию дает сервер redis помимо key-value storage?
Механизм pub/sub (SUBSCRIBE, PUBLISH) позволяет использовать его как сервер очередей, планировщик вместо крона

-Где хранит данные.
в оперативной памяти

-Отличие от MySql и других реляционных БД. За счёт чего появляется скорость?
Отсутствие реляционной алгебры для соединения отношений, хранение в памяти, а не на диске, скорость появляется за счёт доступа к данынм из оперативной памяти

-В чём отличие от MongoDB
Redis служит key-value хранилищем, MongoDB хранит данные как древовидную стурктуру - с узлами и листьями, также монго хранит данные на диске

-Плюсы и минусы redis
Плюсы - скорость, простота горизонтального масштабирования
Минусы - Восстановление после перезагрузки ОС, в RDB файл данные пишутся не часто, ограничиваемся объемом оперативки на сервере

-Цифры на дефолтных настройках. Сколько занимают времени чтение/запись, сколько операций выдерживает.
Можно запустить встроенную утилиту redis-benchmark и увидеть производительность,
Показатели в докер контейнере https://w6p.ru/YWU5MGZ.png
Производительность сервера Redis может достигать 100 000 RPS

-Типы данных в Redis. Под каждый тип данных необходимо рассказать про операнд set/get
Строки set/get
Списки lpush/rpush/lpop/rpop
Множества sadd/spop/srem etc
хеш-таблицы hget/hset
упорядоченные(ортированные) множества zadd/zrange/zrem etc

Про set и get для каждого конкретного случая можно обратиться к конспекту


-Масштабируемость, кластеры, sentiniel (устно рассказать, показать разницу в подключениях на примере любого фреймворка)
Redis HA(High Availability) - main-secondary(master-slave репликация)

Redis Sentinel https://habrastorage.org/r/w1560/getpro/habr/upload_files/adb/380/f4f/adb380f4fba71cc408aeb01b73f8ddc5.png
Сервис обеспечивающий создание распределенных систем
Sentinel node -> main -(replicant)> secondary 1..n автоматическая система восстановление, назначение ведомого узла ведущим в случае отказа первого

Redis Cluster
https://habrastorage.org/r/w1560/getpro/habr/upload_files/809/2c9/215/8092c921554cc5628c183d6abae5a2ce.jpeg




-Отказоустойчивость. Что будет если перезагрузить сервер?
Т.к. данные хранятся в оперативной памяти, а не на диске, после перезагрузки сервера произойдёт очистка всех находившихся данных.
Redis допускает сохранение данных на жесткий диск(создание снапшота, RDB - Redis Database Backup ) — тем самым разрешается проблема холодного старта,
когда после запуска группировки серверов должно пройти некоторое время, прежде чем заполнится кеш, и страницы будут отдаваться клиенту быстро.
Но снапшоты как правило делаются не так часто (~ 1 раз в день, в зависимости от настроек), также если много данных может просесть производительность самого редиса в этот момент



Транзакции

MULTI
.... -> "QUEUED"
.... -> "QUEUED"
EXEC


Redis Cluster использует алгоритмический шардинг.

Для того чтобы найти шард для заданного ключа, мы хешируем ключ, а результат делим по модулю на количество шардов.
Затем, используя детерминистическую хеш-функцию (благодаря этому конкретный ключ всегда будет соответствовать одному и тому же шарду),
мы, когда нужно будет прочитать соответствующие данные, сможем узнать о том, где именно они хранятся.


